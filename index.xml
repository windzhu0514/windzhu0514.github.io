<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>风竹的个人网站</title>
    <link>https://ljc.space/</link>
    <description>Recent content on 风竹的个人网站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 07 Dec 2018 10:05:37 +0800</lastBuildDate>
    
	<atom:link href="https://ljc.space/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>goroutine并发控制</title>
      <link>https://ljc.space/post/go-goroutine-concurrent-control/</link>
      <pubDate>Fri, 07 Dec 2018 10:05:37 +0800</pubDate>
      
      <guid>https://ljc.space/post/go-goroutine-concurrent-control/</guid>
      <description>通信 共享内存 func Test() { ordersInfoApp := make([]orderInfoApp, 0, totalCount) var mux sync.Mutex wg := sync.WaitGroup{} for i := 0; i &amp;lt;= 10; i++ { wg.Add(1) go func(pageIndex int) { // do somethine var ordersInfo orderInfoApp mux.Lock() ordersInfoApp = append(ordersInfoApp, ordersInfo) mux.Unlock() wg.Done() }(i) } wg.Wait() }  一般在简单的数据传递下使用
channel func Test() { ordersInfoApp := make([]orderInfoApp, 0, totalCount) choi := make(chan orderInfoApp, 10) wg := sync.WaitGroup{} for i := 0; i &amp;lt;= 10; i++ { wg.</description>
    </item>
    
    <item>
      <title>go get添加进度</title>
      <link>https://ljc.space/post/go-get-progress/</link>
      <pubDate>Fri, 30 Nov 2018 14:50:56 +0800</pubDate>
      
      <guid>https://ljc.space/post/go-get-progress/</guid>
      <description>go get 比较大的包时会很慢, 可能几分钟或更长, 让人误以为卡死了. 修改 go 源码包，让 go get 显示进度。
 修改 git clone 命令, 添加 &amp;ndash;progress 选项, 使其输出进度 找到如下代码, createdCmd 字段值修改为 clone &amp;ndash;progress {repo} {dir} 其它命令 hg, svn&amp;hellip;添加进度方法类似  // vcsGit describes how to use Git. var vcsGit = &amp;amp;vcsCmd{ name: &amp;quot;Git&amp;quot;, cmd: &amp;quot;git&amp;quot;, createCmd: &amp;quot;clone {repo} {dir}&amp;quot;, // 此处修改为 clone --progress {repo} {dir} downloadCmd: &amp;quot;pull --ff-only&amp;quot; }   修改 cmd.Run()执行的地方, 使其将输出定位到标准输出流上 找到 run1()方法, 在 cmd.Stderr = &amp;amp;buf 下添加两行, 如:</description>
    </item>
    
    <item>
      <title>Markdown 基本语法</title>
      <link>https://ljc.space/post/markdown/</link>
      <pubDate>Thu, 29 Nov 2018 18:15:07 +0800</pubDate>
      
      <guid>https://ljc.space/post/markdown/</guid>
      <description>Welcome to Leanote! 欢迎来到 Leanote! 1. 排版 粗体 斜体
这是一段错误的文本。
引用:
 引用 Leanote 官方的话, 为什么要做 Leanote, 原因是&amp;hellip;
 有充列表:
 支持 Vim 支持 Emacs  无序列表:
 项目 1 项目 2  2. 图片与链接 图片: 链接:
这是去往 Leanote 官方博客的链接
3. 标题 以下是各级标题, 最多支持 5 级标题
# h1 ## h2 ### h3 #### h4 ##### h4 ###### h5  4. 代码 示例:
function get(key) { return m[key]; }  代码高亮示例:</description>
    </item>
    
    <item>
      <title>关于我</title>
      <link>https://ljc.space/about/</link>
      <pubDate>Thu, 29 Nov 2018 16:18:50 +0800</pubDate>
      
      <guid>https://ljc.space/about/</guid>
      <description>C/C++、MFC、Go 语言(golang)开发者
 原生的才是最好的，推荐对原生库增强，而不是重新实现。
 邮箱：windzhu0514@163.com
　Github 主页
　Csdn 主页
扫码关注公众号 扫码领红包 生活小滋润 </description>
    </item>
    
  </channel>
</rss>