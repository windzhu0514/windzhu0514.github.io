<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>一蓑烟雨任平生</title>
    <link>//localhost:1313/</link>
    <description>Recent content on 一蓑烟雨任平生</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 16 Aug 2024 13:17:50 +0800</lastBuildDate>
    <atom:link href="//localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>基于 Prometheus 的微服务监控指南</title>
      <link>//localhost:1313/post/prometheus-guide/</link>
      <pubDate>Fri, 16 Aug 2024 13:17:50 +0800</pubDate>
      <guid>//localhost:1313/post/prometheus-guide/</guid>
      <description>基于 Prometheus 的微服务监控指南 监控系统 随着微服务架构的广泛应用，现代软件系统的复杂性不断增加，对于系统监控和故障排除也更加困难。 在微服务架构中，每个</description>
    </item>
    <item>
      <title>golang源码生成文档及注释语法</title>
      <link>//localhost:1313/post/go-doc-generate-and-syntax/</link>
      <pubDate>Fri, 16 Aug 2024 11:17:50 +0800</pubDate>
      <guid>//localhost:1313/post/go-doc-generate-and-syntax/</guid>
      <description>go version: 1.22.6 godoc 已弃用：godoc 无法选择要显示的包版本，由 golang.org/x/pkgsite/cmd/pkgsite 替代。 godoc 提取 Go 代码里的注释生成网页的形式的 Go 程序文档 默认情况下，godoc 通过 $GOROOT 和 $G</description>
    </item>
    <item>
      <title>听说你想把windows当作linux用？</title>
      <link>//localhost:1313/post/use-windows-as-linux/</link>
      <pubDate>Thu, 28 Oct 2021 13:52:45 +0800</pubDate>
      <guid>//localhost:1313/post/use-windows-as-linux/</guid>
      <description>需求 如果你有一台闲置的PC，而且安装了win10或win11，又想把这台PC当做linux服务用，比如做开发机、跑服务。 安装前提 从应用商店安</description>
    </item>
    <item>
      <title>Go Rate限流器代码分析</title>
      <link>//localhost:1313/post/go-time-rate/</link>
      <pubDate>Sun, 30 Aug 2020 23:49:05 +0800</pubDate>
      <guid>//localhost:1313/post/go-time-rate/</guid>
      <description>源码分析 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66</description>
    </item>
    <item>
      <title>caddy-hugo-filebrowser搭建个人网站和后台管理</title>
      <link>//localhost:1313/post/website-caddy-hugo-filebrowser/</link>
      <pubDate>Fri, 06 Sep 2019 17:40:56 +0800</pubDate>
      <guid>//localhost:1313/post/website-caddy-hugo-filebrowser/</guid>
      <description>使用caddy和hugo搭建个人网站 功能： 自动https 自动响应git hook，运行hugo编译markdown 开机启动服务 docker部署</description>
    </item>
    <item>
      <title>VSCode Remote Development-go开发环境搭建</title>
      <link>//localhost:1313/post/go-vscode-remote-development/</link>
      <pubDate>Mon, 19 Aug 2019 18:54:39 +0800</pubDate>
      <guid>//localhost:1313/post/go-vscode-remote-development/</guid>
      <description>安装vscode 刚学习go的时候一直使用的vscode开发，轻巧方便。但随着工程代码量增加，本地下载的包越来越多，代码提示和自动补全功能变得</description>
    </item>
    <item>
      <title>李开复：留学带给我的十件礼物，第一件是自信</title>
      <link>//localhost:1313/post/likaifu-10-gifts/</link>
      <pubDate>Mon, 11 Mar 2019 23:10:32 +0800</pubDate>
      <guid>//localhost:1313/post/likaifu-10-gifts/</guid>
      <description>本文由 简悦 SimpRead 转码， 原文地址 https://mp.weixin.qq.com/s/BLIQNoeB9zFm6DZSpLlYgQ 今天分享的文章，是我之前的一个演讲，总结了自己从初中到大学的留学生涯得到的十个最大的收获。最近有媒体朋友整理发表</description>
    </item>
    <item>
      <title>golang类型转换</title>
      <link>//localhost:1313/post/go-type-convert/</link>
      <pubDate>Thu, 07 Mar 2019 17:45:27 +0800</pubDate>
      <guid>//localhost:1313/post/go-type-convert/</guid>
      <description>int &amp;ndash;&amp;gt; string 转换函数： fmt.Sprintf：格式化范围 math.MinInt64 -&amp;gt; math.MaxInt64 strconv.Itoa：格式化范围 math.MinInt64 -&amp;gt; math.MaxInt64 strconv.FormatInt：格式化</description>
    </item>
    <item>
      <title>git多账户共存</title>
      <link>//localhost:1313/post/multiple-git-account/</link>
      <pubDate>Sat, 12 Jan 2019 22:48:32 +0800</pubDate>
      <guid>//localhost:1313/post/multiple-git-account/</guid>
      <description>问题 很多开发者都会遇到在自己的电脑上使用不止一个 git 帐号的情况。一般一个是自己的 github 帐号，另一个则是公司的 git 帐号，比如 gitlab、bitbuc</description>
    </item>
    <item>
      <title>goroutine并发控制</title>
      <link>//localhost:1313/post/go-goroutine-concurrent-control/</link>
      <pubDate>Fri, 07 Dec 2018 10:05:37 +0800</pubDate>
      <guid>//localhost:1313/post/go-goroutine-concurrent-control/</guid>
      <description>通信 共享内存 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 func Test() { ordersInfoApp := make([]orderInfoApp, 0, totalCount) var mux sync.Mutex wg := sync.WaitGroup{} for i := 0; i &amp;lt;= 10; i++ { wg.Add(1) go func(pageIndex int) { // do somethine var ordersInfo orderInfoApp mux.Lock() ordersInfoApp = append(ordersInfoApp, ordersInfo) mux.Unlock() wg.Done() }(i) } wg.Wait()</description>
    </item>
    <item>
      <title>go get添加进度</title>
      <link>//localhost:1313/post/go-get-progress/</link>
      <pubDate>Fri, 30 Nov 2018 14:50:56 +0800</pubDate>
      <guid>//localhost:1313/post/go-get-progress/</guid>
      <description>go get 比较大的包时会很慢, 可能几分钟或更长, 让人误以为卡死了. 修改 go 源码包，让 go get 显示进度。 修改 git clone 命令, 添加 &amp;ndash;progress 选项, 使其输出进度 找到如下代码</description>
    </item>
    <item>
      <title>Markdown 基本语法</title>
      <link>//localhost:1313/post/markdown/</link>
      <pubDate>Thu, 29 Nov 2018 18:15:07 +0800</pubDate>
      <guid>//localhost:1313/post/markdown/</guid>
      <description>1. 排版 粗体 斜体 这是一段错误的文本。 引用: 引用 Leanote 官方的话, 为什么要做 Leanote, 原因是&amp;hellip; 有充列表: 支持 Vim 支持 Emacs 无序列表: 项目 1 项目 2 2. 图片</description>
    </item>
    <item>
      <title>关于我</title>
      <link>//localhost:1313/about/</link>
      <pubDate>Thu, 29 Nov 2018 16:18:50 +0800</pubDate>
      <guid>//localhost:1313/about/</guid>
      <description>C/C++、MFC、Go 语言(golang)开发者 原生的才是最好的，推荐对原生库增强，而不是重新实现。 邮箱：windzhu0514@163.</description>
    </item>
  </channel>
</rss>
